[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "petit-cli"
version = "0.1.0"
description = "Tiny tools for TD data operations"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pyarrow>=21.0.0",
    "pytd>=2.2.0",
    "tqdm>=4.67.1",
    "typer>=0.17.4",
]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "pyright>=1.1.390",
]

[project.scripts]
petit-cli = "petit_cli.main:app"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--cov=petit_cli",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85",
]

[tool.coverage.run]
source = ["src/petit_cli"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.11"
pythonPlatform = "All"
typeCheckingMode = "standard"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
